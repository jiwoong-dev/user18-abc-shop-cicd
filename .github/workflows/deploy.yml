name: Build and Push to ECR and ACR

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag (e.g., latest, 1.0.0)'
        required: true
        default: 'latest'
        type: string

jobs:
  build-and-push:
    name: Build and Push Container Image to ECR & ACR
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. AWS 자격증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Amazon ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Amazon ECR 빌더 세션 생성 및 푸시
      - name: Build and Push to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          builder: ecr-builder
          tags: |
            ${{ secrets.ECR_BACKEND_REPOSITORY }}:${{ github.event.inputs.image_tag }}

      # 5. Azure ACR 로그인
      - name: Login to Azure ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 6. Azure ACR 빌더 세션 생성 및 푸시
      - name: Build and Push to Azure ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          builder: acr-builder
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.ACR_REPOSITORY }}:${{ github.event.inputs.image_tag }}

      # 7. 배포용 레포지토리 체크아웃
      - name: Checkout deployment repository 
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.DEPLOYMENT_REPO_NAME }}
          token: ${{ secrets.DEPLOYMENT_REPO_PAT }}
          path: 'deployment-repo'

      # 8. Kustomize 설치
      - name: Install Kustomize 
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      # 9. Kubernetes 매니페스트 업데이트
      - name: Update Kubernetes manifest
        run: |
          cd deployment-repo/k8s/shopping-mall/backend/overlays/aws
          kustomize edit set image backend-image=${{ secrets.ECR_BACKEND_REPOSITORY }}:${{ github.event.inputs.image_tag }}

      # 10. GitHub 레포지토리에 변경사항 커밋 및 푸시
      - name: Commit and push changes
        run: |
          cd deployment-repo
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update backend image to tag ${{ github.event.inputs.image_tag }}" || echo "No changes to commit"
          git push
